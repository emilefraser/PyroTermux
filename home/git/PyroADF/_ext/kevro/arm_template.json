{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "KevroDataFactory02"
        },
        "dmgr_AutoIR_AzureSqlMI_DataManager_Local_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'dmgr_AutoIR_AzureSqlMI_DataManager_Local'"
        },
        "dmgr_AutoIR_AzureSqlMI_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'dmgr_AutoIR_AzureSqlMI'"
        },
        "dmgr_KEVADFIR01_MySQL_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'dmgr_KEVADFIR01_MySQL'"
        },
        "dmgr_AutoIR_AzureSqlMI_DataManager_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'dmgr_AutoIR_AzureSqlMI_DataManager'"
        },
        "dmgr_AutoIR_AzureMySQL_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'dmgr_AutoIR_AzureMySQL'"
        },
        "FS_TestDB_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'FS_TestDB'"
        },
        "SourceTableCheck-1h_properties_CheckSourceTableRowCount_parameters_UpperLimitDate": {
            "type": "string",
            "defaultValue": "2019-12-08T08:00:00Z"
        },
        "KEVADFIR01_properties_typeProperties_linkedInfo_resourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/c52e8c00-4626-414d-a898-eadbceeb694b/resourcegroups/Kevro_Online/providers/Microsoft.DataFactory/factories/KevroDataFactory01/integrationruntimes/KEVADFIR01"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Points to the DataManager DB with fixed parameters",
                "annotations": [],
                "type": "AzureSqlMI",
                "typeProperties": {
                    "connectionString": "[parameters('dmgr_AutoIR_AzureSqlMI_DataManager_Local_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "A connection to Azure servers",
                "parameters": {
                    "Server": {
                        "type": "string",
                        "defaultValue": "kevrosql02.public.4af7d6a3be3e.database.windows.net,3342"
                    },
                    "Database": {
                        "type": "string",
                        "defaultValue": "DataManager_Local"
                    },
                    "Username": {
                        "type": "string",
                        "defaultValue": "sqladmin"
                    },
                    "Password": {
                        "type": "string",
                        "defaultValue": "h@U\\!En&wV4/M5:K"
                    }
                },
                "annotations": [],
                "type": "AzureSqlMI",
                "typeProperties": {
                    "connectionString": "[parameters('dmgr_AutoIR_AzureSqlMI_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_KEVADFIR01_MySQL')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "A connection to MySQL servers via KEVADFIR01",
                "parameters": {
                    "Server": {
                        "type": "string",
                        "defaultValue": "10.0.1.2"
                    },
                    "Database": {
                        "type": "string",
                        "defaultValue": "KAS"
                    },
                    "Username": {
                        "type": "string",
                        "defaultValue": "acctech"
                    },
                    "Password": {
                        "type": "string",
                        "defaultValue": "Ahzie2ae"
                    }
                },
                "annotations": [],
                "type": "MySql",
                "typeProperties": {
                    "connectionString": "[parameters('dmgr_KEVADFIR01_MySQL_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "KEVADFIR01",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/KEVADFIR01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI_DataManager')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "A connection to the DataManager",
                "annotations": [],
                "type": "AzureSqlMI",
                "typeProperties": {
                    "connectionString": "[parameters('dmgr_AutoIR_AzureSqlMI_DataManager_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureMySQL')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "A connection to a MySQL database in Azure",
                "annotations": [],
                "type": "AzureMySql",
                "typeProperties": {
                    "connectionString": "[parameters('dmgr_AutoIR_AzureMySQL_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/FS_TestDB')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('FS_TestDB_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Run ODS Cloud Loads')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-06T16:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Run Duplicate Query')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Check if sales_trail has duplicates and post results to DataManager",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "QueryDuplicates",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-09T06:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/QueryDuplicates')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS Daily Load - 1800h  0600h')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Main daily run - Do not change ",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-08T16:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyTest1_ToFS - 2200h')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Copy sales_detail_order from MySQL to FS DB",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "DuplicateTestPipeToFS",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-09T20:00:00Z",
                        "endTime": "2019-10-10T09:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/DuplicateTestPipeToFS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyTest2_ToODS - 1800h')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Copy sales_detail_order from MySQL to MI ODS_EMS",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "DuplicateTestPipeToKevro",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-09T18:00:00Z",
                        "endTime": "2019-10-10T09:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/DuplicateTestPipeToKevro')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Interval_Run - 02h00')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Run pipe for each load - intervals of 10 min",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 10,
                        "startTime": "2019-10-17T00:02:00Z",
                        "endTime": "2019-10-18T05:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WithHistory_DailyLoad 18h00')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Run the WithHistory loads daily at 18:00",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD - WithHistory",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-21T04:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {}
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD - WithHistory')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Trigger All Loads 18h00 daily')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD - NoHistory",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD - Full",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD - Offset",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    },
                    {
                        "pipelineReference": {
                            "referenceName": "Cloud ODS PROD - WithHistory",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-10-29T15:48:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                30
                            ],
                            "hours": [
                                15
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD - NoHistory')]",
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD - Full')]",
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD - Offset')]",
                "[concat(variables('factoryId'), '/pipelines/Cloud ODS PROD - WithHistory')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceTableCheck-1h')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Run the Source Check Table Count every 1h",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CheckSourceTableRowCount",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "UpperLimitDate": "[parameters('SourceTableCheck-1h_properties_CheckSourceTableRowCount_parameters_UpperLimitDate')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 1,
                        "startTime": "2019-12-05T20:09:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CheckSourceTableRowCount')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceTableCheck-2min')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Run the Source Check Table Count every 3min",
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "CheckSourceTableRowCount",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 2,
                        "startTime": "2019-12-06T08:00:00Z",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CheckSourceTableRowCount')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/KEVADFIR01')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('KEVADFIR01_properties_typeProperties_linkedInfo_resourceId')]",
                        "authorizationType": "Rbac"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/MySQLdev')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "description": "A MySQL Dev Server",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Server": {
                            "value": "@dataset().Server",
                            "type": "Expression"
                        },
                        "Database": {
                            "value": "@dataset().Database",
                            "type": "Expression"
                        },
                        "Username": {
                            "value": "@dataset().Username",
                            "type": "Expression"
                        },
                        "Password": {
                            "value": "@dataset().Password",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Server": {
                        "type": "string",
                        "defaultValue": "kevrosql02.public.4af7d6a3be3e.database.windows.net,3342"
                    },
                    "Database": {
                        "type": "string",
                        "defaultValue": "DataManager_Local"
                    },
                    "Username": {
                        "type": "string",
                        "defaultValue": "sqladmin"
                    },
                    "Password": {
                        "type": "string",
                        "defaultValue": "h@U\\!En&wV4/M5:K"
                    },
                    "StageSchema": {
                        "type": "string",
                        "defaultValue": "Stage"
                    },
                    "StageTable": {
                        "type": "string",
                        "defaultValue": "Table_Stage"
                    }
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().StageSchema",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().StageTable",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [],
                "typeProperties": {
                    "schema": "ETL",
                    "table": "vw_get_LoadControlQueue"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureSqlMI_DataManager')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [],
                "typeProperties": {
                    "schema": "DC",
                    "table": "vw_mat_Credentials"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_KEVADFIR01_MySQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_KEVADFIR01_MySQL",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Server": {
                            "value": "@dataset().Server",
                            "type": "Expression"
                        },
                        "Database": {
                            "value": "@dataset().Database",
                            "type": "Expression"
                        },
                        "Username": {
                            "value": "@dataset().Username",
                            "type": "Expression"
                        },
                        "Password": {
                            "value": "@dataset().Password",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Server": {
                        "type": "string",
                        "defaultValue": "10.0.1.2"
                    },
                    "Database": {
                        "type": "string",
                        "defaultValue": "KAS"
                    },
                    "Username": {
                        "type": "string",
                        "defaultValue": "acctech"
                    },
                    "Password": {
                        "type": "string",
                        "defaultValue": "Ahzie2ae"
                    },
                    "StageTable": {
                        "type": "string",
                        "defaultValue": "Table_Stage"
                    }
                },
                "annotations": [],
                "type": "MySqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": {
                        "value": "@{dataset().StageTable}",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_KEVADFIR01_MySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_lbg')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [
                    {
                        "name": "CustomerID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Branch",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Name",
                        "precision": 50,
                        "scale": 0
                    },
                    {
                        "name": "HoldingID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "HoldingName",
                        "precision": 50,
                        "scale": 0
                    },
                    {
                        "name": "Tel",
                        "precision": 15,
                        "scale": 0
                    },
                    {
                        "name": "Fax",
                        "precision": 15,
                        "scale": 0
                    },
                    {
                        "name": "PostalAddress1",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "PostalAddress2",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PostalAddress3",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PostalAddress4",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PhysicalAddress1",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "PhysicalAddress2",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PhysicalAddress3",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PhysicalAddress4",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "Country",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "VATNumber",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "BusinessType",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "Salesman",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "SalesmanEmail",
                        "precision": 50,
                        "scale": 0
                    },
                    {
                        "name": "KevroAwareness",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "VAT",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "CustomerInfoForm",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "CoDebtorship",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "SuretyDoc",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "Terms",
                        "precision": 50,
                        "scale": 0
                    },
                    {
                        "name": "CreditLimit",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "SpecialTerms",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "CreditLimitReserved",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "OnHold",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "Active",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "FollowUp",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "AutoPrepaid",
                        "precision": 3,
                        "scale": 0
                    },
                    {
                        "name": "SalesComment",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "CompanyRegistrationNo",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "CreditGauranteeLimit",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "CreditGuaranteeExpiryDate",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "CreditGauranteeComment",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "BudgetTurnover",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Royalty",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltyManual",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltyChanged",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltyManualChanged",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "DefaultForeignCurrency",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "AccountsComment",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "CreditController",
                        "precision": 100,
                        "scale": 0
                    },
                    {
                        "name": "BudgetPercIncrease",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "LegalName",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Created",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "CreatedBy",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "BankName",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "TradingTerms",
                        "precision": 232,
                        "scale": 0
                    },
                    {
                        "name": "BankAccount",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "BankBranchCode",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "BankBranch",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "logo",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "OldCustomerID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltySportManualChanged",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltySportManual",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltySport",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "DiscountSport",
                        "precision": 4,
                        "scale": 2
                    },
                    {
                        "name": "ProductInterests",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "ClearanceID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "PPPSAStatus",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PPPSANo",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "Agent",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "KevroAgent",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "CategoryRoyalty",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "CategoryDiscount",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Segment",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "SubSegment",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "Provision",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "CompanyStructure",
                        "precision": 100,
                        "scale": 0
                    },
                    {
                        "name": "CompanyType",
                        "precision": 100,
                        "scale": 0
                    },
                    {
                        "name": "CompanySize",
                        "precision": 100,
                        "scale": 0
                    },
                    {
                        "name": "BEEClassified",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "TradingYears",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "BrandImportant",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "WebAddress",
                        "precision": 100,
                        "scale": 0
                    },
                    {
                        "name": "DefaultDeliveryMethod",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "Kicker_Apparel",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Gifting",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Headwear",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Workwear",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Sport",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Display",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Branding",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_IgnoreFlag",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Created_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Created_Date",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_Date",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "SubBranch",
                        "precision": 10,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "tableName": "`customer_test`"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_lbg')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Branch",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "HoldingID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "HoldingName",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Tel",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Fax",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PostalAddress1",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PostalAddress2",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PostalAddress3",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PostalAddress4",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PhysicalAddress1",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PhysicalAddress2",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PhysicalAddress3",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PhysicalAddress4",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Country",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "VATNumber",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BusinessType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Salesman",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "SalesmanEmail",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "KevroAwareness",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "VAT",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "CustomerInfoForm",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "CoDebtorship",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "SuretyDoc",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "Terms",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CreditLimit",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "SpecialTerms",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "CreditLimitReserved",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "OnHold",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "Active",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "FollowUp",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "AutoPrepaid",
                        "type": "tinyint",
                        "precision": 3,
                        "scale": 255
                    },
                    {
                        "name": "SalesComment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CompanyRegistrationNo",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CreditGauranteeLimit",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "CreditGuaranteeExpiryDate",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CreditGauranteeComment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BudgetTurnover",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Royalty",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltyManual",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltyChanged",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltyManualChanged",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "DefaultForeignCurrency",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "AccountsComment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CreditController",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BudgetPercIncrease",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "LegalName",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Created",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CreatedBy",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BankName",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "TradingTerms",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BankAccount",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BankBranchCode",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BankBranch",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "logo",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "OldCustomerID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltySportManualChanged",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltySportManual",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltySport",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "DiscountSport",
                        "type": "decimal",
                        "precision": 4,
                        "scale": 2
                    },
                    {
                        "name": "ProductInterests",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "ClearanceID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "PPPSAStatus",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PPPSANo",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Agent",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "KevroAgent",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CategoryRoyalty",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CategoryDiscount",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Segment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "SubSegment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Provision",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "CompanyStructure",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CompanyType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "CompanySize",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BEEClassified",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "TradingYears",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BrandImportant",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "WebAddress",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "DefaultDeliveryMethod",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Kicker_Apparel",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Gifting",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Headwear",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Workwear",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Sport",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Display",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_Branding",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "Kicker_IgnoreFlag",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Created_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Created_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Updated_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "SubBranch",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureMySqlTable1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "TargetTable": {
                        "type": "string",
                        "defaultValue": "TargetTable"
                    }
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().TargetTable",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dmgr_AutoIR_AzureMySQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "dmgr_AutoIR_AzureMySQL",
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_2tv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [
                    {
                        "name": "LogID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Logtime",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Branch",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "UserName",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "StockID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Comment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Colours",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Sizes",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Qty",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "QtyBefore",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "QtyAfter",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "AveCostBefore",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "AveCostAfter",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "MovementType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "TrailType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "TrailComment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "GRNCost",
                        "type": "float",
                        "precision": 15,
                        "scale": 255
                    },
                    {
                        "name": "QtyBefore1",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "QtyAfter1",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Created_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Created_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Updated_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_2tv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [
                    {
                        "name": "LogID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Logtime",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "Branch",
                        "precision": 5,
                        "scale": 0
                    },
                    {
                        "name": "UserName",
                        "precision": 25,
                        "scale": 0
                    },
                    {
                        "name": "StockID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Comment",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "Colours",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "Sizes",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "Qty",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "QtyBefore",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "QtyAfter",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "AveCostBefore",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "AveCostAfter",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "MovementType",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "TrailType",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "TrailComment",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "GRNCost",
                        "precision": 7,
                        "scale": 0
                    },
                    {
                        "name": "QtyBefore1",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "QtyAfter1",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Created_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Created_Date",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_Date",
                        "precision": 19,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "tableName": "`stock_trail`"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_y85')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [
                    {
                        "name": "LogID",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "Branch",
                        "precision": 5,
                        "scale": 0
                    },
                    {
                        "name": "Logtime",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "UserName",
                        "precision": 25,
                        "scale": 0
                    },
                    {
                        "name": "OrderID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "NoteType",
                        "precision": 25,
                        "scale": 0
                    },
                    {
                        "name": "Note",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Amount",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "TimeTaken",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Status",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Weight",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Processed",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "OldOrderID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Created_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Created_Date",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_Date",
                        "precision": 19,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "tableName": "`sales_trail`"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_y85')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [
                    {
                        "name": "LogID",
                        "type": "decimal",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "Branch",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Logtime",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "UserName",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "OrderID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "NoteType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Note",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Amount",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "TimeTaken",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Status",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Weight",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Processed",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "OldOrderID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Created_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Created_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Updated_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DestinationDataset_tvs')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureMySQL",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureMySqlTable",
                "schema": [
                    {
                        "name": "LineID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "InvoiceID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "StockID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "Comment",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Colours",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "Sizes",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "Qty",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "StartPrice",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "ListPrice",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "SellingPrice",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "fx_SellingPrice",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_Royalty",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_Specials",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_ForeignExchange",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Cost",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "BrandingDifficulty",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "BrandingType",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "BrandingInstructions",
                        "precision": 45,
                        "scale": 0
                    },
                    {
                        "name": "InvoiceDate",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "OldInvoiceID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "StockType",
                        "precision": 20,
                        "scale": 0
                    },
                    {
                        "name": "RoyaltyFactor",
                        "precision": 3,
                        "scale": 2
                    },
                    {
                        "name": "Devision",
                        "precision": 55,
                        "scale": 0
                    },
                    {
                        "name": "PromoDiscount",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "SOLineID",
                        "precision": 10,
                        "scale": 0
                    },
                    {
                        "name": "TaxRate",
                        "precision": 6,
                        "scale": 2
                    },
                    {
                        "name": "Created_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Created_Date",
                        "precision": 19,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_Date",
                        "precision": 19,
                        "scale": 0
                    }
                ],
                "typeProperties": {
                    "tableName": "`sales_detail_invoice`"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureMySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SourceDataset_tvs')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "type": "AzureSqlMITable",
                "schema": [
                    {
                        "name": "LineID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "InvoiceID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "StockID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "Comment",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Colours",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Sizes",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Qty",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "StartPrice",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "ListPrice",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "SellingPrice",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "fx_SellingPrice",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_Royalty",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_Specials",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount_ForeignExchange",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Discount",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "Cost",
                        "type": "decimal",
                        "precision": 12,
                        "scale": 2
                    },
                    {
                        "name": "BrandingDifficulty",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BrandingType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "BrandingInstructions",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "InvoiceDate",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "OldInvoiceID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "StockType",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "RoyaltyFactor",
                        "type": "decimal",
                        "precision": 3,
                        "scale": 2
                    },
                    {
                        "name": "Devision",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "PromoDiscount",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "SOLineID",
                        "type": "int",
                        "precision": 10,
                        "scale": 255
                    },
                    {
                        "name": "TaxRate",
                        "type": "decimal",
                        "precision": 6,
                        "scale": 2
                    },
                    {
                        "name": "Created_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Created_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    },
                    {
                        "name": "Updated_By",
                        "type": "nvarchar",
                        "precision": 255,
                        "scale": 255
                    },
                    {
                        "name": "Updated_Date",
                        "type": "datetime2",
                        "precision": 255,
                        "scale": 0
                    }
                ],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FS_Local_DB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "FS_TestDB",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "FS Test datasets"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "sales_detail_order_CopyTest"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/FS_TestDB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/stock_trail')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "stock_trail\n",
                "activities": [
                    {
                        "name": "stock_trail",
                        "description": "stock_trail",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`stock_trail`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.stock_trail\r\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LogID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "LogID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Logtime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Logtime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Branch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Branch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UserName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StockID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Comment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Comment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Colours",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Colours"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sizes",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Sizes"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Qty",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Qty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyBefore",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyBefore"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyAfter",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyAfter"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AveCostBefore",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AveCostBefore"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AveCostAfter",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AveCostAfter"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MovementType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MovementType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TrailType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TrailType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TrailComment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TrailComment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GRNCost",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "GRNCost"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyBefore1",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyBefore1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyAfter1",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyAfter1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_2tv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_2tv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-07T10:15:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_2tv')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_2tv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/sales_trail')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "sales_trail\n",
                "activities": [
                    {
                        "name": "sales_trail",
                        "description": "sales_trail",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`sales_trail`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.sales_trail\r\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LogID",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "LogID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Branch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Branch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Logtime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Logtime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UserName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrderID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OrderID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NoteType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "NoteType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Note",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Note"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Amount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Amount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeTaken",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TimeTaken"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Status",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Status"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Weight",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Weight"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Processed",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Processed"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OldOrderID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OldOrderID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_y85",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_y85",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-07T10:15:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_y85')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_y85')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/sales_detail_invoice')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "sales_detail_invoice",
                "activities": [
                    {
                        "name": "sales_detail_invoice",
                        "description": "sales_detail_invoice",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`sales_detail_invoice`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.sales_detail_invoice",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "LineID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "InvoiceID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StockID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Comment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Comment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Colours",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Colours"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sizes",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Sizes"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Qty",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Qty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StartPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "StartPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ListPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "ListPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SellingPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "SellingPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "fx_SellingPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "fx_SellingPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_Royalty",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_Royalty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_Specials",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_Specials"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_ForeignExchange",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_ForeignExchange"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Cost",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Cost"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingDifficulty",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingDifficulty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingInstructions",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingInstructions"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "InvoiceDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OldInvoiceID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OldInvoiceID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "StockType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltyFactor",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "RoyaltyFactor"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Devision",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Devision"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PromoDiscount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "PromoDiscount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SOLineID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "SOLineID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TaxRate",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "TaxRate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_tvs",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_tvs",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-07T10:15:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_tvs')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_tvs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Copy from ODS_EMS to MySQL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Copy from ODS_EMS to MySQL",
                "activities": [
                    {
                        "name": "customer",
                        "description": "customer",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`customer_test`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * FROM [ODS_EMS].[dbo].[customer]",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30",
                                "preCopyScript": "TRUNCATE `main`.`customer`;"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CustomerID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "CustomerID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Branch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Branch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Name",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Name"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HoldingID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "HoldingID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "HoldingName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "HoldingName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Tel",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Tel"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Fax",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Fax"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalAddress1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalAddress2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalAddress2"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalAddress3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalAddress3"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PostalAddress4",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PostalAddress4"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PhysicalAddress1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PhysicalAddress1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PhysicalAddress2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PhysicalAddress2"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PhysicalAddress3",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PhysicalAddress3"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PhysicalAddress4",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PhysicalAddress4"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Country",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Country"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "VATNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "VATNumber"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BusinessType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BusinessType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Salesman",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Salesman"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SalesmanEmail",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SalesmanEmail"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KevroAwareness",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KevroAwareness"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "VAT",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "VAT"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CustomerInfoForm",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "CustomerInfoForm"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CoDebtorship",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "CoDebtorship"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SuretyDoc",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "SuretyDoc"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Terms",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Terms"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimit",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CreditLimit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SpecialTerms",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "SpecialTerms"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditLimitReserved",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CreditLimitReserved"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OnHold",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "OnHold"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Active",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "Active"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FollowUp",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "FollowUp"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AutoPrepaid",
                                            "type": "Byte"
                                        },
                                        "sink": {
                                            "name": "AutoPrepaid"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SalesComment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SalesComment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CompanyRegistrationNo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CompanyRegistrationNo"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditGauranteeLimit",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CreditGauranteeLimit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditGuaranteeExpiryDate",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CreditGuaranteeExpiryDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditGauranteeComment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CreditGauranteeComment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetTurnover",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "BudgetTurnover"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Royalty",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Royalty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltyManual",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "RoyaltyManual"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltyChanged",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "RoyaltyChanged"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltyManualChanged",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "RoyaltyManualChanged"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultForeignCurrency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "DefaultForeignCurrency"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountsComment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountsComment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreditController",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CreditController"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BudgetPercIncrease",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "BudgetPercIncrease"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LegalName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "LegalName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreatedBy",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CreatedBy"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BankName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BankName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TradingTerms",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TradingTerms"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BankAccount",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BankAccount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BankBranchCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BankBranchCode"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BankBranch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BankBranch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "logo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "logo"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OldCustomerID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OldCustomerID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltySportManualChanged",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "RoyaltySportManualChanged"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltySportManual",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "RoyaltySportManual"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltySport",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "RoyaltySport"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DiscountSport",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "DiscountSport"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductInterests",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductInterests"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ClearanceID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "ClearanceID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PPPSAStatus",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PPPSAStatus"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PPPSANo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PPPSANo"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Agent",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Agent"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KevroAgent",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KevroAgent"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CategoryRoyalty",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CategoryRoyalty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CategoryDiscount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "CategoryDiscount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Segment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Segment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubSegment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubSegment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Provision",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Provision"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CompanyStructure",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CompanyStructure"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CompanyType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CompanyType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CompanySize",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CompanySize"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BEEClassified",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "BEEClassified"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TradingYears",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TradingYears"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandImportant",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "BrandImportant"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "WebAddress",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "WebAddress"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DefaultDeliveryMethod",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "DefaultDeliveryMethod"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Apparel",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Apparel"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Gifting",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Gifting"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Headwear",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Headwear"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Workwear",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Workwear"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Sport",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Sport"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Display",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Display"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_Branding",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Kicker_Branding"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kicker_IgnoreFlag",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Kicker_IgnoreFlag"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubBranch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubBranch"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_lbg",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_lbg",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "stock_trail",
                        "description": "stock_trail",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`stock_trail`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.stock_trail\r\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30",
                                "preCopyScript": "TRUNCATE `main`.`stock_trail`;"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LogID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "LogID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Logtime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Logtime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Branch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Branch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UserName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StockID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Comment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Comment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Colours",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Colours"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sizes",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Sizes"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Qty",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Qty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyBefore",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyBefore"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyAfter",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyAfter"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AveCostBefore",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AveCostBefore"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AveCostAfter",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "AveCostAfter"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MovementType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MovementType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TrailType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TrailType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TrailComment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TrailComment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GRNCost",
                                            "type": "Double"
                                        },
                                        "sink": {
                                            "name": "GRNCost"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyBefore1",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyBefore1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "QtyAfter1",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "QtyAfter1"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_2tv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_2tv",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "sales_trail",
                        "description": "sales_trail",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`sales_trail`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.sales_trail\r\n",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30",
                                "preCopyScript": "TRUNCATE `main`.`sales_trail`;"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LogID",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "LogID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Branch",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Branch"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Logtime",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Logtime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UserName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UserName"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OrderID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OrderID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "NoteType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "NoteType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Note",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Note"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Amount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Amount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TimeTaken",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "TimeTaken"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Status",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Status"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Weight",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Weight"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Processed",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Processed"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OldOrderID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OldOrderID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_y85",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_y85",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "sales_detail_invoice",
                        "description": "sales_detail_invoice",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "."
                            },
                            {
                                "name": "Destination",
                                "value": "`sales_detail_invoice`"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": "select * from ODS_EMS.dbo.sales_detail_invoice",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureMySqlSink",
                                "writeBatchSize": 10000,
                                "writeBatchTimeout": "00:00:30",
                                "preCopyScript": "TRUNCATE `main`.`sales_detail_invoice`;"
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "LineID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "LineID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "InvoiceID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "StockID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Comment",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Comment"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Colours",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Colours"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sizes",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Sizes"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Qty",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "Qty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StartPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "StartPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ListPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "ListPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SellingPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "SellingPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "fx_SellingPrice",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "fx_SellingPrice"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_Royalty",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_Royalty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_Specials",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_Specials"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount_ForeignExchange",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount_ForeignExchange"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Discount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Discount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Cost",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "Cost"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingDifficulty",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingDifficulty"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BrandingInstructions",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BrandingInstructions"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceDate",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "InvoiceDate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OldInvoiceID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "OldInvoiceID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StockType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "StockType"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "RoyaltyFactor",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "RoyaltyFactor"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Devision",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Devision"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PromoDiscount",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "PromoDiscount"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SOLineID",
                                            "type": "Int32"
                                        },
                                        "sink": {
                                            "name": "SOLineID"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TaxRate",
                                            "type": "Decimal"
                                        },
                                        "sink": {
                                            "name": "TaxRate"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Created_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Created_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Created_Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_By",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Updated_By"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Updated_Date",
                                            "type": "DateTime"
                                        },
                                        "sink": {
                                            "name": "Updated_Date"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SourceDataset_tvs",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestinationDataset_tvs",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-07T15:08:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SourceDataset_lbg')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_lbg')]",
                "[concat(variables('factoryId'), '/datasets/SourceDataset_2tv')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_2tv')]",
                "[concat(variables('factoryId'), '/datasets/SourceDataset_y85')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_y85')]",
                "[concat(variables('factoryId'), '/datasets/SourceDataset_tvs')]",
                "[concat(variables('factoryId'), '/datasets/DestinationDataset_tvs')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS QA')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "WithHistory",
                        "description": "WithHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalWithHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalWithHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetLatestRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "CopyToStageTable",
                                    "description": "CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCountToCopy",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord}'\nAND IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')\nOR\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00"
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MergeStageToTarget",
                                    "description": "MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads_DEV]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "SourceRowCount": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "TargetServerCredentials",
                                    "description": "TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SourceServerCredentials",
                                    "description": "SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "description": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 2 end and step 3 start",
                                    "description": "Log step 2 end and step 3 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error after Lookup",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 3 end and step 4 start",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Copy",
                                    "description": "Log Error After Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetEndRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetEndRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetEndRecordOnTarget').output.value[0].TargetLastUpdateRecord, ' SR:', activity('GetSourceRowCount').output.value[0].SourceRowCount)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCountToCopy').output.value[0].SourceRowCountToCopy",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "GetEndRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCount",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) FROM @{item().SourceDataEntityName}) AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'\n",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "GetTargetRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetTargetEndRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetEndRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n        AND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCountToCopy",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT COUNT(1) AS SourceRowCountToCopy\nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord}'\nAND IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')\nOR\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalWithHistoryUpdate",
                        "description": "LoadType - IncrementalWithHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalwithhistoryupdate')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "annotations": [],
                "lastPublishTime": "2019-10-21T12:43:37Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/QueryDuplicates')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Find doubles and save",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "SELECT `LogID`, COUNT(1)\nFROM `sales_trail`\nGROUP BY `LogID`\nHAVING COUNT(1) > 1;",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "SqlMISink",
                                "tableOption": "autoCreate"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "kevrosql02.public.4af7d6a3be3e.database.windows.net,3342",
                                    "Database": "DataManager_Local",
                                    "Username": "sqladmin",
                                    "Password": "h@U\\!En&wV4/M5:K",
                                    "StageSchema": "dbo",
                                    "StageTable": "salesTrailDuplicatesOnMySQL"
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "Data Load"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-09T09:26:12Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS PROD')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "LoadType - Full",
                        "description": "LoadType - Full",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'full')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WithHistory",
                        "description": "WithHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalWithHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalWithHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "WH_GetLatestRecordOnTarget",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "WH_SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "WH_CopyToStageTable",
                                    "description": "WH_CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') > '@{activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord}'\nAND IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')\nOR\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00"
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "WH_MergeStageToTarget",
                                    "description": "WH_MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads_Backup]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "WH_TargetServerCredentials",
                                    "description": "WH_TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "WH_SourceServerCredentials",
                                    "description": "WH_SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "description": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 2 end and step 3 start",
                                    "description": "Log step 2 end and step 3 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error after Lookup",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 3 end and step 4 start",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('WH_CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Copy",
                                    "description": "Log Error After Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetTargetEndRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetEndRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetEndRecordOnTarget').output.value[0].TargetLastUpdateRecord, ' SR:', activity('WH_GetSourceRowCount').output.value[0].SourceRowCount)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('WH_GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('WH_GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('WH_GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('WH_GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('WH_CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('WH_GetTargetEndRowCount').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('WH_GetTargetEndRowCount').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "WH_GetEndRecordOnTarget",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "WH_GetSourceRowCount",
                                    "description": "WH_GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) FROM @{item().SourceDataEntityName}) AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'\n",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart_Backup]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('WH_GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "WH_GetTargetRowCount",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "WH_GetTargetEndRowCount",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "WH_GetEndRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n        AND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('WH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalWithHistoryUpdate",
                        "description": "LoadType - IncrementalWithHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalwithhistoryupdate')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Full",
                        "description": "Full",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - Full",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - Full').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "FULL_CopyToStageTable",
                                    "description": "FULL_CopyToStageTable\nCopy Updates from Source to StageTable\n\nSource Query:\nSELECT * FROM @{item().SourceDataEntityName}",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "FULL_TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "FULL_SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT * FROM @{item().SourceDataEntityName}",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('FULL_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('FULL_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "FULL_MergeStageToTarget",
                                    "description": "FULL_MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "FULL_CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads_Backup]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "FULL_TargetServerCredentials",
                                    "description": "FULL_TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "FULL_SourceServerCredentials",
                                    "description": "FULL_SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "NoHistory",
                        "description": "NoHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalNoHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalNoHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "NH_GetLatestRecordOnTarget",
                                    "description": "NH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "NH_TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "NH_SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord \nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('NH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('NH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "NH_CopyToStageTable",
                                    "description": "NH_CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "NH_GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('NH_GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{utcnow()}')",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "10.0.1.2",
                                                "Database": "KAS",
                                                "Username": "acctech",
                                                "Password": "Ahzie2ae",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('NH_TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('NH_TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "NH_MergeStageToTarget",
                                    "description": "NH_MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "NH_CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads_Backup]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "NH_TargetServerCredentials",
                                    "description": "NH_TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "NH_SourceServerCredentials",
                                    "description": "NH_SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalNoHistoryUpdate",
                        "description": "LoadType - IncrementalNoHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalnohistoryupdate')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "concurrency": 1,
                "annotations": [],
                "lastPublishTime": "2019-10-23T04:43:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DuplicateTestPipeToKevro')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy to Kevro Azure",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": "SELECT * FROM `sales_detail_order`;"
                            },
                            "sink": {
                                "type": "SqlMISink",
                                "tableOption": "autoCreate"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "kevrosql02.public.4af7d6a3be3e.database.windows.net,3342",
                                    "Database": "ODS_EMS",
                                    "Username": "sqladmin",
                                    "Password": "h@U\\!En&wV4/M5:K",
                                    "StageSchema": "dbo",
                                    "StageTable": "sales_detail_order_CopyTest"
                                }
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "FS_Test pipes"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-09T14:18:55Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DuplicateTestPipeToFS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy to local db",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": "SELECT * FROM `sales_detail_order`;"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "tableOption": "autoCreate"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "FS_Local_DB",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "folder": {
                    "name": "FS_Test pipes"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-09T14:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/FS_Local_DB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS PROD - Full')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "LoadType - Full",
                        "description": "LoadType - Full",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'full')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Full",
                        "description": "Full",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - Full",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - Full').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "CopyToStageTable",
                                    "description": "CopyToStageTable\nCopy Updates from Source to StageTable\n\nSource Query:\nSELECT * FROM @{item().SourceDataEntityName}",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT * FROM @{item().SourceDataEntityName}",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MergeStageToTarget",
                                    "description": "MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "SourceRowCount": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "StepNo": {
                                                "value": "6",
                                                "type": "int"
                                            },
                                            "CreatedDTField": {
                                                "value": {
                                                    "value": "@item().CreatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "OffsetDays": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "TargetServerCredentials",
                                    "description": "TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SourceServerCredentials",
                                    "description": "SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": null,
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Step 1 success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "GetTargetRowCount",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCount",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) FROM @{item().SourceDataEntityName}) AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'\n",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log GetTargetRowCount Failed_copy1",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Stage Table Copy Complete",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find Target Row Count after copy",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                "Database": "@{item().TargetDatabaseName}",
                                                "Username": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                "Password": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                "StageSchema": "@item().TargetSchemaName",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log Copy To Stage Failure",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "6",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Find Target Row Count after copy",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('Find Target Row Count after copy').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('Find Target Row Count after copy').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Step 2 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Log Step 1 success",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "folder": {
                    "name": "1. Prod Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2020-01-08T08:14:59Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS PROD - NoHistory')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "NoHistory",
                        "description": "NoHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalNoHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalNoHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetLatestRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nDATEADD(hh, -1, ISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 01:00:00.000')) AS TargetLastCreateRecord \nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "CopyToStageTable",
                                    "description": "CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MergeStageToTarget",
                                    "description": "MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "SourceRowCount": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "StepNo": {
                                                "value": "6",
                                                "type": "int"
                                            },
                                            "CreatedDTField": {
                                                "value": {
                                                    "value": "@item().CreatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "OffsetDays": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "TargetServerCredentials",
                                    "description": "TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SourceServerCredentials",
                                    "description": "SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": null,
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "Log Step 1 success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Step 2 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Log Step 1 success",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "GetSourceRowCount",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) \n\t\tFROM @{item().SourceDataEntityName} \n\t\tWHERE IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}') AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'\n",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetTargetRowCount",
                                    "description": "WH_GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "GetSourceRowCountToCopy",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "@{item().TargetSchemaName}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log GetTargetRowCount Failed_copy1",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Stage Table Copy Complete",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "IsSetForReload": {
                                                "value": {
                                                    "value": "@item().IsSetForReloadOnNextRun",
                                                    "type": "Expression"
                                                },
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@Item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@Item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null,
                                                "type": "Decimal"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null,
                                                "type": "int"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Copy To Stage Failure",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find Target Row Count after copy",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n        AND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                "Database": "@{item().TargetDatabaseName}",
                                                "Username": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                "Password": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                "StageSchema": "@{item().TargetSchemaName}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Find Target Row Count after copy",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('Find Target Row Count after copy').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('Find Target Row Count after copy').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCountToCopy').output.value[0].SourceRowCountToCopyNew",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": ""
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "GetSourceRowCountToCopy",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT COUNT(1) AS SourceRowCountToCopyNew\nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalNoHistoryUpdate",
                        "description": "LoadType - IncrementalNoHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalnohistoryupdate')",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "folder": {
                    "name": "1. Prod Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2019-12-04T10:15:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS PROD - WithHistory')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "WithHistory",
                        "description": "WithHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalWithHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalWithHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "GetLatestRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nDATEADD(hh, -1, ISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 01:00:00.000')) AS TargetLastUpdateRecord,\nDATEADD(hh, -1, ISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 01:00:00.000')) AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "CopyToStageTable",
                                    "description": "CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCountToCopyUpdate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "GetSourceRowCountToCopyNew",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') >= '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord}'\nAND IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')\nOR\n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') >= '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00"
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "MergeStageToTarget",
                                    "description": "MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "SourceRowCount": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "CreatedDTField": {
                                                "value": {
                                                    "value": "@item().CreatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "StepNo": {
                                                "value": "6",
                                                "type": "int"
                                            },
                                            "OffsetDays": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "TargetServerCredentials",
                                    "description": "TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SourceServerCredentials",
                                    "description": "SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "description": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 2 end and step 3 start",
                                    "description": "Log step 2 end and step 3 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error after Lookup",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 3 end and step 4 start",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Copy",
                                    "description": "Log Error After Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetEndRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetEndRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetEndRecordOnTarget').output.value[0].TargetLastUpdateRecord, ' SR:', activity('GetSourceRowCount').output.value[0].SourceRowCount)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCountToCopyNew').output.value[0].SourceRowCountToCopyNew",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCountToCopyUpdate').output.value[0].SourceRowCountToCopyUpdate",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "GetEndRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCount",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) \n\t\tFROM @{item().SourceDataEntityName} \n\t\tWHERE IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}') AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "GetTargetRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetTargetEndRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetEndRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n        AND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCountToCopyUpdate",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT COUNT(1) AS SourceRowCountToCopyUpdate\nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') >= '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord}'\nAND IFNULL(@{item().UpdatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')\nAND (IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') < '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}')\n",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCountToCopyNew",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT COUNT(1) AS SourceRowCountToCopyNew\nFROM `@{item().SourceDataEntityName}` \nWHERE \n(IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') >= '@{activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord}'\nAND IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}')",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalWithHistoryUpdate",
                        "description": "LoadType - IncrementalWithHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalwithhistoryupdate')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "1. Prod Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2019-12-06T15:25:17Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cloud ODS PROD - Offset')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "MySQL-to-SqlMI",
                        "description": "MySQL-to-SqlMI\nFilter for a specific Copy Process",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LoadControlView",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Offset Day",
                        "description": "OffsetHistory",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadType - IncrementalOffsetHistoryUpdate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [
                            {
                                "name": "ForEach_LoadType",
                                "value": "IncrementalWithHistoryUpdate"
                            }
                        ],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadType - IncrementalOffsetHistoryUpdate').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetLatestRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "TargetServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SourceServerCredentials",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Find ExecutionLogID",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "MergeStageToTarget",
                                    "description": "MergeStageToTarget\nMerge Stage with Target Table and Drop StageTable",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_merge_ODS_Loads]",
                                        "storedProcedureParameters": {
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "PrimaryKeyField": {
                                                "value": {
                                                    "value": "@item().PrimaryKeyField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "StageTableName": {
                                                "value": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetSchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "UpdatedDTField": {
                                                "value": {
                                                    "value": "@item().UpdatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "TargetDatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "FieldList": {
                                                "value": {
                                                    "value": "@item().FieldList",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "SourceRowCount": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "CreatedDTField": {
                                                "value": {
                                                    "value": "@item().CreatedDTField",
                                                    "type": "Expression"
                                                },
                                                "type": "string"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "StepNo": {
                                                "value": "6",
                                                "type": "int"
                                            },
                                            "OffsetDays": {
                                                "value": {
                                                    "value": "@item().OffsetDays",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "TargetServerCredentials",
                                    "description": "TargetServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS TargetAuthType\n,Username AS TargetUsername\n,Password AS TargetPassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().TargetServerName}' AND DatabaseInstanceName = '@{item().TargetDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SourceServerCredentials",
                                    "description": "SourceServerCredentials",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\n AuthType AS SourceAuthType\n,Username AS SourceUsername\n,Password AS SourcePassword\nFROM [DC].[vw_mat_Credentials]\nWHERE ServerName = '@{item().SourceServerName}' AND DatabaseInstanceName = '@{item().SourceDatabaseInstanceName}'",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ExecuteLogStart",
                                    "description": "ExecuteLogStart",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@Item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 2 end and step 3 start",
                                    "description": "Log step 2 end and step 3 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error after Lookup",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 3 end and step 4 start",
                                    "description": "Log step 3 end and step 4 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Copy",
                                    "description": "Log Error After Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "CopyToStageTable",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log step 4 end and step 5 start",
                                    "description": "Log step 4 end and step 5 start",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetEndRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetEndRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetEndRecordOnTarget').output.value[0].TargetLastUpdateRecord, ' SR:', activity('GetSourceRowCount').output.value[0].SourceRowCount)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "False",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetRowCount').output.value[0].InitialTargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "SourceRowCount ": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceRowCount ",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCount').output.value[0].SourceTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": {
                                                    "value": "@activity('CopyToStageTable').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "int32"
                                            },
                                            "TargetRowCount": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetRowCount",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": {
                                                    "value": "@activity('GetTargetEndRowCount').output.value[0].TargetTableSizeBytes",
                                                    "type": "Expression"
                                                },
                                                "type": "decimal"
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": {
                                                    "value": "@activity('GetSourceRowCountToCopy').output.value[0].SourceRowCountToCopy",
                                                    "type": "Expression"
                                                },
                                                "type": "int"
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Error After Merge",
                                    "description": "Log Error After Merge",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Find ExecutionLogID",
                                    "description": "Find ExecutionLogID",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ExecuteLogStart",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT MAX(ExecutionLogID) AS ExecutionLogID FROM ETL.ExecutionLog WHERE  LoadConfigID = @{item().LoadConfigID } ",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "GetEndRecordOnTarget",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "MergeStageToTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT\nISNULL(MAX(@{item().UpdatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastUpdateRecord,\nISNULL(MAX(@{item().CreatedDTField}), '1900-01-01 00:00:00.000') AS TargetLastCreateRecord\nFROM [@{item().TargetSchemaName}].[@{item().TargetDataEntityName}]",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "Stage",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCount",
                                    "description": "GetSourceRowCount",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetTargetRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT (SELECT COUNT(*) \n\t\tFROM @{item().SourceDataEntityName} \n\t\tWHERE IFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') <= '@{item().LoadCurrentTime}') AS SourceRowCount\n\t  ,ROUND( SUM( data_length ))  AS SourceTableSizeBytes \nFROM information_schema.tables where table_name = '@{item().SourceDataEntityName}'",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Log GetSourceRowCount Failed",
                                    "description": "Log Error after Lookup",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[ETL].[sp_ADF_SetLoadControlStart]",
                                        "storedProcedureParameters": {
                                            "CurrentProcessingKeyValue": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DatabaseName": {
                                                "value": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DataEntityName": {
                                                "value": {
                                                    "value": "@item().TargetDataEntityName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Find ExecutionLogID').output.Firstrow.ExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "IsError": {
                                                "value": "True",
                                                "type": "Boolean"
                                            },
                                            "LastProcessingKeyValue": {
                                                "value": {
                                                    "value": "@concat('C:', activity('GetLatestRecordOnTarget').output.value[0].TargetLastCreateRecord, ' U:' ,activity('GetLatestRecordOnTarget').output.value[0].TargetLastUpdateRecord)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "LoadControlID": {
                                                "value": {
                                                    "value": "@item().LoadControlID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "LoadType": {
                                                "value": {
                                                    "value": "@item().LoadType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuedForProcessingDT": {
                                                "value": {
                                                    "value": "@item().QueuedForProcessingDT",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SchemaName": {
                                                "value": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StepNo": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "SourceRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "SourceTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "InitialTargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "InitialTargetTableSizeBytes": {
                                                "value": null,
                                                "type": "decimal"
                                            },
                                            "RowsTransferred": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetRowCount": {
                                                "value": null,
                                                "type": "int"
                                            },
                                            "TargetTableSizeBytes": {
                                                "value": null
                                            },
                                            "IsSetForReload": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopy": {
                                                "value": null
                                            },
                                            "SourceRowCountToCopyUpdate": {
                                                "value": null
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "GetTargetRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetLatestRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS InitialTargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS InitialTargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n\tAND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "@item().TargetSchemaName",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetTargetEndRowCount",
                                    "description": "GetLatestRecordOnTarget\nGet the latest recorded date in Target table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetEndRecordOnTarget",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlMISource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT ISNULL(PART.rows,0) AS TargetRowCount\n,ISNULL(SUM(CAST(ROUND((((AU.used_pages) * 8)), 2) AS NUMERIC(36, 2))),0) AS TargetTableSizeBytes\nFROM  sys.tables TBL\nLEFT JOIN sys.schemas AS SCH ON SCH.schema_id = TBL.schema_id\nLEFT JOIN sys.partitions PART ON TBL.object_id = PART.object_id\nLEFT JOIN sys.indexes IDX ON PART.object_id = IDX.object_id\nAND PART.index_id = IDX.index_id\nLEFT JOIN\nsys.allocation_units AU ON PART.partition_id = AU.container_id\nWHERE  TBL.name = '@{item().TargetDataEntityName}'\n        AND SCH.name = '@{item().TargetSchemaName}'\nGROUP BY\n part.Rows",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().TargetDatabaseInstanceName), 'default'), item().TargetServerName, concat(item().TargetServerName, '\\', item().TargetDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@item().TargetDatabaseName",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": "@item().TargetSchemaName",
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "GetSourceRowCountToCopy",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT COUNT(1) AS SourceRowCountToCopy\nFROM `@{item().SourceDataEntityName}` \nWHERE \nIFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > DATE_SUB(NOW(),INTERVAL @{item().OffsetDays} DAY);",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                "Database": "@{item().SourceDatabaseName}",
                                                "Username": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                "Password": {
                                                    "value": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                    "type": "Expression"
                                                },
                                                "StageTable": "Table_Stage"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "CopyToStageTable",
                                    "description": "CopyToStageTable\nCopy Updates from Source to StageTable",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "GetSourceRowCountToCopy",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "MySqlSource",
                                            "query": {
                                                "value": "SELECT @{replace(replace(item().FieldList, ']', '`'),  '[', '`')} \nFROM `@{item().SourceDataEntityName}` \nWHERE \nIFNULL(@{item().CreatedDTField}, '1901-01-02T00:00:00') > DATE_SUB(NOW(),INTERVAL @{item().OffsetDays} DAY);",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "SqlMISink",
                                            "preCopyScript": {
                                                "value": "IF OBJECT_ID('@{concat(item().TargetDataEntityName, '_Staged')}') IS NOT NULL\nTRUNCATE TABLE @{concat(item().TargetDataEntityName, '_Staged')}",
                                                "type": "Expression"
                                            },
                                            "tableOption": "autoCreate"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "dmgr_KEVADFIR01_MySQL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{if(equals(toLower(item().SourceDatabaseInstanceName), 'default'), item().SourceServerName, concat(item().SourceServerName, '\\', item().SourceDatabaseInstanceName))}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().SourceDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('SourceServerCredentials').output.value[0].SourceUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('SourceServerCredentials').output.value[0].SourcePassword}",
                                                    "type": "Expression"
                                                },
                                                "StageTable": "Table_Stage"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "dmgr_AutoIR_AzureSqlMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Server": {
                                                    "value": "@{item().TargetServerName}\\@{item().TargetDatabaseInstanceName}",
                                                    "type": "Expression"
                                                },
                                                "Database": {
                                                    "value": "@{item().TargetDatabaseName}",
                                                    "type": "Expression"
                                                },
                                                "Username": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetUsername}",
                                                    "type": "Expression"
                                                },
                                                "Password": {
                                                    "value": "@{activity('TargetServerCredentials').output.value[0].TargetPassword}",
                                                    "type": "Expression"
                                                },
                                                "StageSchema": {
                                                    "value": "@item().TargetSchemaName",
                                                    "type": "Expression"
                                                },
                                                "StageTable": {
                                                    "value": "@concat(item().TargetDataEntityName, '_Staged')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadType - IncrementalOffsetHistoryUpdate",
                        "description": "LoadType - IncrementalOffsetHistoryUpdate",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "MySQL-to-SqlMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('MySQL-to-SqlMI').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(toLower(item().LoadType),'incrementalwithoffsetdays')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadControlView",
                        "description": "LoadControlView\nUpdate the control table and view to queue loads",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[ETL].[sp_load_LoadControlQueue]"
                        },
                        "linkedServiceName": {
                            "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "folder": {
                    "name": "1. Prod Pipelines"
                },
                "annotations": [],
                "lastPublishTime": "2019-10-30T17:13:21Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/linkedServices/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": "select MAX(Updated_Date) from sales_detail_invoice"
                            },
                            "dataset": {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            }
                        }
                    }
                ],
                "annotations": [],
                "lastPublishTime": "2019-12-05T15:39:10Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CheckSourceTableRowCount')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetSourceRowCount_Create",
                        "description": "GetSourceRowCount_Create",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "SELECT COUNT(1) AS CreatedCount\nFROM `sales_detail_invoice`\nWHERE Created_Date <= '@{pipeline().parameters.UpperLimitDate}'",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "GetSourceRowCount_Update",
                        "description": "GetSourceRowCount_Update",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "GetSourceRowCount_Create",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "SELECT COUNT(1) AS UpdatedCount\nFROM `sales_detail_invoice`\nWHERE Updated_Date <= '@{pipeline().parameters.UpperLimitDate}'\n",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "dmgr_KEVADFIR01_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Server": "10.0.1.2",
                                    "Database": "KAS",
                                    "Username": "acctech",
                                    "Password": "Ahzie2ae",
                                    "StageTable": "Table_Stage"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "WriteToTable",
                        "description": "Adds data to table:\nDataManager_Local.dbo.sourceDataCheck",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "GetSourceRowCount_Update",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlMISource",
                                "sqlReaderQuery": {
                                    "value": "INSERT INTO [DataManager_Local].[dbo].[SourceDataCheck]\n([TestDate (UTC)], CreateCount, UpdateCount, UpperLimitDate)\nVALUES\n(GETDATE(),\n@{activity('GetSourceRowCount_Create').output.value[0].CreatedCount},\n@{activity('GetSourceRowCount_Update').output.value[0].UpdatedCount},\n '@{pipeline().parameters.UpperLimitDate}');",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "dmgr_AutoIR_AzureSqlMI_DataManager_Local",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "parameters": {
                    "UpperLimitDate": {
                        "type": "string",
                        "defaultValue": "2019-12-06T18:00:00Z"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2019-12-06T14:58:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/dmgr_KEVADFIR01_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/dmgr_AutoIR_AzureSqlMI_DataManager_Local')]"
            ]
        }
    ]
}